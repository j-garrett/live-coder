html {
  /*If arial isn't available, font should fallback to san-serif*/
  font-family: 'arial';
  /*Set root font size equal to 10px for easy calculations*/
  font-size: 62.5%;
}

body {
  background-color: lightblue;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  height: 98vh;
}

/*We'll use flexbox for laying out page*/
/*https://css-tricks.com/snippets/css/a-guide-to-flexbox/*/
menu.header {
  -ms-flex-preferred-size: 5em;
      flex-basis: 5em;
  margin: 0;
  padding: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

menu.header h1 {
  margin: 0;
  font-size: 3rem;
}

.button-selectors {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  list-style-type: none;
  margin: 0;
  padding: 0;
}

.button-selectors .button {
  /*Use rem to reference root font-size instead of parent*/
  font-size: 2rem;
  width: 10rem;
  height: 3rem;
  background-color: lightgrey;
  border: 1px solid grey;
  /*We don't want chunky middle borders so we'll remove right border*/
  border-right: 0;
  /*Flex will let us center text vertically and horizontally*/
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.button-selectors .button:first-child {
  border-radius: .5rem 0 0 .5rem;
}

.button-selectors .button:last-child {
  border-radius: 0 .5rem .5rem 0;
  /*Now we reset border so the final button has proper end*/
  border: 1px solid grey;
}

.button-selectors .button:hover {
  background-color: grey;
  cursor: default;
}

.button-selectors .button.unselected {
  background-color: lightblue;
}
.button-selectors .button.unselected:hover {
  background-color: grey;
  color: lightblue;
}

.panes-container {
  width: 100%;
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  margin: 0 auto 0 auto;
  border: 1px solid grey;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.pane {
  border: 1px solid lightgrey;
  /*We want all panels to have equal widths so set their ratio the same with flex-grow*/
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  /*Flex basis will let all windows grow to the full width*/
  -ms-flex-preferred-size: 100%;
      flex-basis: 100%;
}

.pane {
  background-color: white;
}

.pane-text-input{
  width: 100%;
  height: 100%;
  outline: none;
  border: 0;
  padding: 0;
  resize: none;
  font-family: monospace;
  font-size: 2.2rem;
}

.pane[data-display-pane="output"] {
  font-size: 16px;
  font-family: serif;
}

/*Handle breakpoints*/
@media screen and (max-width: 630px) {
  menu.header {
    -ms-flex-preferred-size: 8rem;
        flex-basis: 8rem;
  }
}
@media screen and (max-width: 330px) {
  menu.header {
    -ms-flex-preferred-size: 16rem;
        flex-basis: 16rem;
  }
}